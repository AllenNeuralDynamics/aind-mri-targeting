name: test and build

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  tests:
    name: Python ${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    if: github.event.pull_request.draft == false
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [3.9, "3.10", 3.11, 3.12, 3.13]
      fail-fast: true

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          python-version: ${{ matrix.python-version }}
          enable-cache: true

      - name: Install dependencies
        run: uv sync --frozen --extra dev

      - name: ruff check
        run: uv run --frozen ruff check .

      - name: ruff format
        run: uv run --frozen ruff format --check .

      - name: interrogate
        run: uv run --frozen interrogate
      - name: codespell
        run: uv run --frozen codespell --check-filenames

      - name: pytest
        run: uv run --frozen pytest --cov aind-mri-utils

      - name: Build
        run: uv build

      - name: Run tests on built wheel
        run: |
          mkdir /tmp/testdir
          mkdir -p /tmp/.cache/uv
          cp -r tests /tmp/testdir/
          cp dist/*.whl /tmp/testdir/
          cd /tmp/testdir
          uv venv
          source /tmp/testdir/.venv/bin/activate
          UV_CACHE_DIR=/tmp/.cache/uv uv pip install pytest *.whl
          uv run --frozen pytest tests/
